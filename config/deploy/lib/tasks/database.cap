namespace :database do
  
  desc "Create the database for this application."
  task :create_database do
    on roles(:db) do
      # create user
      if test %Q{sudo -u postgres psql postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='#{fetch(:postgresql_user, :full_app_name)}';" | grep -q 1}
        info "Role #{fetch(:postgresql_user, fetch(:full_app_name))} already exists"
      else
        execute %Q{sudo -u postgres psql -c "create user #{fetch(:postgresql_user, fetch(:full_app_name))} with password '#{fetch(:postgresql_password, "hackme")}';"}
      end

      # create database and grant privileges for the user
      if test %Q{sudo -u postgres psql -lqt | cut -d \\| -f 1 | grep -wq #{fetch(:postgresql_database, fetch(:full_app_name))}}
        info "Database #{fetch(:postgresql_database, fetch(:full_app_name))} already exists"
      else
        execute %Q{sudo -u postgres psql -c "create database #{fetch(:postgresql_database, fetch(:full_app_name))};"}
        execute %Q{sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE #{fetch(:postgresql_database, fetch(:full_app_name))} to #{fetch(:postgresql_user, :full_app_name)};"}
      end
    end
  end
  before "deploy:started", "database:create_database"

  desc "Upload the database.yml configuration file."
  task :setup do
    on roles(:app) do
      mkdir_p "#{shared_path}/config"
      template "database.yml.erb", "#{shared_path}/config/database.yml"
    end
  end
  before "deploy:started", "database:setup"

  # desc "Symlink the database.yml file into latest release"
  # task :symlink do
  #  on roles(:app) do
  #   execute "ln -nfs #{shared_path}/config/database.yml #{release_path}/config/database.yml"
  # end
  # end
  # after "deploy:finalize_update", "database:symlink"
end